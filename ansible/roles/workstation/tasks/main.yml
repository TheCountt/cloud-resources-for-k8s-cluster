---
- name: Generate certificates and config files
  hosts: localhost
  connection: local
  vars:
    - KUBERNETES_API_SERVER_ADDRESS: k8s-external-nlb-ac5a0a61ed2078fa.elb.us-west-1.amazonaws.com
  tasks:
    - name: Create ca-authority directory
      ansible.builtin.file:
        path: /tmp/ca-authority
        state: directory
        follow: yes

    - name: Copy to ca-authority directory
      template:
        src: "~/k8s-cluster-from-ground-up/ansible/roles/local-machine/templates/certificates.sh.j2"
        dest: "/tmp/ca-authority/{{ item }}"
        mode: +x
      loop:
        - certificates.sh
        - kubeconfigs.sh
        - encryption-config.sh
  

    - name: Generate certificates
      ansible.builtin.shell: ./certificates.sh
      args:
        chdir: /tmp/ca-authority
        # creates: service-account-csr.json

    - name: Generate kubeconfig files
      ansible.builtin.shell: ./kubeconfigs.sh
      args:
        chdir: /tmp/ca-authority
        # creates: admin.kubeconfig

    - name: Generate encryption.yaml
      ansible.builtin.shell: ./encryption.sh
      args:
        chdir: /tmp/ca-authority
        creates: encryption-config.yaml

- import_playbook: ./plays/distribute-master.yaml

- import_playbook: ./plays/master.yaml

- import_playbook: ./plays/distribute-worker.yaml

- import_playbook: ./plays/worker.yaml

# - name: Create and bind cluster roles
#   hosts: localhost
#   connection: local
#   tasks:
#     - name: Create and bind cluster roles
#       ansible.builtin.shell: ./binding.sh
#       args:
#         chdir: /tmp/ca-authority

    # - name: Deploy CoreDNS Service
    #   community.kubernetes.k8s:
    #     state: present
    #     src: ./templates/coredns-1.8.yaml
    #     kubeconfig: /tmp/ca-authority/admin.kubeconfig
    # kubectl patch node mynode -p '{"spec":{"podCIDR":""}}'